Grammar

    0 $accept: program $end

    1 program: ε
    2        | stmts

    3 stmts: stmt
    4      | stmts stmt

    5 stmt: expr ';'
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | break
   11     | continue
   12     | block
   13     | funcdef
   14     | ';'
   15     | error

   16 expr: assignexpr
   17     | expr '+' expr
   18     | expr '-' expr
   19     | expr '*' expr
   20     | expr '%' expr
   21     | expr '/' expr
   22     | expr '>' expr
   23     | expr ">=" expr
   24     | expr '<' expr
   25     | expr "<=" expr

   26 $@1: ε

   27 expr: expr "==" $@1 expr

   28 $@2: ε

   29 expr: expr "!=" $@2 expr

   30 $@3: ε

   31 expr: expr "and" $@3 W expr

   32 $@4: ε

   33 expr: expr "or" $@4 W expr
   34     | term

   35 W: ε

   36 term: '(' expr ')'
   37     | primary
   38     | "++" lvalue
   39     | "--" lvalue
   40     | lvalue "++"
   41     | lvalue "--"
   42     | '-' expr
   43     | "not" expr

   44 assignexpr: lvalue '=' expr

   45 primary: call
   46        | objectdef
   47        | const
   48        | lvalue
   49        | '(' funcdef ')'

   50 lvalue: member
   51       | "identifier"
   52       | "local" "identifier"
   53       | "::" "identifier"

   54 member: lvalue '.' "identifier"
   55       | call '.' "identifier"
   56       | lvalue '[' expr ']'
   57       | call '[' expr ']'

   58 call: call '(' ')'
   59     | call '(' elist ')'
   60     | lvalue callsuffix
   61     | '(' funcdef ')' '(' ')'
   62     | '(' funcdef ')' '(' elist ')'

   63 callsuffix: normcall
   64           | methodcall

   65 normcall: '(' ')'
   66         | '(' elist ')'

   67 methodcall: ".." "identifier" '(' ')'
   68           | ".." "identifier" '(' elist ')'

   69 elist: expr
   70      | elist ',' expr

   71 objectdef: '[' ']'
   72          | '[' elist ']'
   73          | '[' indexed ']'

   74 indexed: indexedelem
   75        | indexed ',' indexedelem

   76 indexedelem: '{' expr ':' expr '}'

   77 block: '{' '}'

   78 $@5: ε

   79 block: '{' $@5 stmts '}'

   80 funcname: "identifier"
   81         | ε

   82 funcprefix: "function" funcname

   83 funcargs: '(' ')'
   84         | '(' idlist ')'

   85 funcbody: block

   86 $@6: ε

   87 $@7: ε

   88 funcdef: funcprefix funcargs $@6 funcbody $@7

   89 const: "number"
   90      | "string"
   91      | "nil"
   92      | "true"
   93      | "false"

   94 idlist: "identifier"
   95       | idlist ',' "identifier"

   96 ifprefix: "if" '(' expr ')'

   97 elseprefix: "else"

   98 ifstmt: ifprefix stmt
   99       | ifprefix stmt elseprefix stmt

  100 whilestart: "while"

  101 whilecond: '(' expr ')'

  102 whilestmt: whilestart whilecond loopstmt

  103 N: ε

  104 M: ε

  105 E: ε
  106  | elist

  107 forprefix: "for" '(' E ';' M expr ';'

  108 forstmt: forprefix N E ')' N loopstmt N

  109 returnstmt: "return" ';'
  110           | "return" expr ';'

  111 $@8: ε

  112 loopstmt: $@8 stmt

  113 break: "break" ';'

  114 continue: "continue" ';'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 20
    '(' (40) 36 49 58 59 61 62 65 66 67 68 83 84 96 101 107
    ')' (41) 36 49 58 59 61 62 65 66 67 68 83 84 96 101 108
    '*' (42) 19
    '+' (43) 17
    ',' (44) 70 75 95
    '-' (45) 18 42
    '.' (46) 54 55
    '/' (47) 21
    ':' (58) 76
    ';' (59) 5 14 107 109 110 113 114
    '<' (60) 24
    '=' (61) 44
    '>' (62) 22
    '[' (91) 56 57 71 72 73
    ']' (93) 56 57 71 72 73
    '{' (123) 76 77 79
    '}' (125) 76 77 79
    error (256) 15
    "number" <numVal> (258) 89
    "string" <strVal> (259) 90
    "identifier" <strVal> (260) 51 52 53 54 55 67 68 80 94 95
    "if" (261) 96
    "else" (262) 97
    "while" (263) 100
    "for" (264) 107
    "function" (265) 82
    "return" (266) 109 110
    "break" (267) 113
    "continue" (268) 114
    "and" (269) 31
    "not" (270) 43
    "or" (271) 33
    "local" (272) 52
    "true" (273) 92
    "false" (274) 93
    "nil" (275) 91
    "::" (276) 53
    ".." (277) 67 68
    "==" (278) 27
    "!=" (279) 29
    "++" (280) 38 40
    "--" (281) 39 41
    ">=" (282) 23
    "<=" (283) 25
    UMINUS (284)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1 2
        on right: 0
    stmts <stmtVal> (50)
        on left: 3 4
        on right: 2 4 79
    stmt <stmtVal> (51)
        on left: 5 6 7 8 9 10 11 12 13 14 15
        on right: 3 4 98 99 112
    expr <exprNode> (52)
        on left: 16 17 18 19 20 21 22 23 24 25 27 29 31 33 34
        on right: 5 17 18 19 20 21 22 23 24 25 27 29 31 33 36 42 43 44 56 57 69 70 76 96 101 107 110
    $@1 (53)
        on left: 26
        on right: 27
    $@2 (54)
        on left: 28
        on right: 29
    $@3 (55)
        on left: 30
        on right: 31
    $@4 (56)
        on left: 32
        on right: 33
    W <numVal> (57)
        on left: 35
        on right: 31 33
    term <exprNode> (58)
        on left: 36 37 38 39 40 41 42 43
        on right: 34
    assignexpr <exprNode> (59)
        on left: 44
        on right: 16
    primary <exprNode> (60)
        on left: 45 46 47 48 49
        on right: 37
    lvalue <exprNode> (61)
        on left: 50 51 52 53
        on right: 38 39 40 41 44 48 54 56 60
    member <exprNode> (62)
        on left: 54 55 56 57
        on right: 50
    call <exprNode> (63)
        on left: 58 59 60 61 62
        on right: 45 55 57 58 59
    callsuffix <Call> (64)
        on left: 63 64
        on right: 60
    normcall <Call> (65)
        on left: 65 66
        on right: 63
    methodcall <Call> (66)
        on left: 67 68
        on right: 64
    elist <exprNode> (67)
        on left: 69 70
        on right: 59 62 66 68 70 72 106
    objectdef <exprNode> (68)
        on left: 71 72 73
        on right: 46
    indexed <indexedVal> (69)
        on left: 74 75
        on right: 73 75
    indexedelem <indexedVal> (70)
        on left: 76
        on right: 74 75
    block <stmtVal> (71)
        on left: 77 79
        on right: 12 85
    $@5 (72)
        on left: 78
        on right: 79
    funcname <strVal> (73)
        on left: 80 81
        on right: 82
    funcprefix <symbol> (74)
        on left: 82
        on right: 88
    funcargs (75)
        on left: 83 84
        on right: 88
    funcbody <numVal> (76)
        on left: 85
        on right: 88
    funcdef <symbol> (77)
        on left: 88
        on right: 13 49 61 62
    $@6 (78)
        on left: 86
        on right: 88
    $@7 (79)
        on left: 87
        on right: 88
    const <exprNode> (80)
        on left: 89 90 91 92 93
        on right: 47
    idlist (81)
        on left: 94 95
        on right: 84 95
    ifprefix <numVal> (82)
        on left: 96
        on right: 98 99
    elseprefix <numVal> (83)
        on left: 97
        on right: 99
    ifstmt <stmtVal> (84)
        on left: 98 99
        on right: 6
    whilestart <numVal> (85)
        on left: 100
        on right: 102
    whilecond <numVal> (86)
        on left: 101
        on right: 102
    whilestmt (87)
        on left: 102
        on right: 7
    N <numVal> (88)
        on left: 103
        on right: 108
    M <numVal> (89)
        on left: 104
        on right: 107
    E (90)
        on left: 105 106
        on right: 107 108
    forprefix <forloopVal> (91)
        on left: 107
        on right: 108
    forstmt (92)
        on left: 108
        on right: 8
    returnstmt (93)
        on left: 109 110
        on right: 9
    loopstmt <stmtVal> (94)
        on left: 112
        on right: 102 108
    $@8 (95)
        on left: 111
        on right: 112
    break <stmtVal> (96)
        on left: 113
        on right: 10
    continue <stmtVal> (97)
        on left: 114
        on right: 11


State 0

    0 $accept: • program $end

    error         shift, and go to state 1
    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "if"          shift, and go to state 5
    "while"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "return"      shift, and go to state 9
    "break"       shift, and go to state 10
    "continue"    shift, and go to state 11
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 23
    '{'           shift, and go to state 24

    $end  reduce using rule 1 (program)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46
    break       go to state 47
    continue    go to state 48


State 1

   15 stmt: error •

    $default  reduce using rule 15 (stmt)


State 2

   89 const: "number" •

    $default  reduce using rule 89 (const)


State 3

   90 const: "string" •

    $default  reduce using rule 90 (const)


State 4

   51 lvalue: "identifier" •

    $default  reduce using rule 51 (lvalue)


State 5

   96 ifprefix: "if" • '(' expr ')'

    '('  shift, and go to state 49


State 6

  100 whilestart: "while" •

    $default  reduce using rule 100 (whilestart)


State 7

  107 forprefix: "for" • '(' E ';' M expr ';'

    '('  shift, and go to state 50


State 8

   82 funcprefix: "function" • funcname

    "identifier"  shift, and go to state 51

    $default  reduce using rule 81 (funcname)

    funcname  go to state 52


State 9

  109 returnstmt: "return" • ';'
  110           | "return" • expr ';'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 53

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 10

  113 break: "break" • ';'

    ';'  shift, and go to state 55


State 11

  114 continue: "continue" • ';'

    ';'  shift, and go to state 56


State 12

   43 term: "not" • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 57
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 13

   52 lvalue: "local" • "identifier"

    "identifier"  shift, and go to state 58


State 14

   92 const: "true" •

    $default  reduce using rule 92 (const)


State 15

   93 const: "false" •

    $default  reduce using rule 93 (const)


State 16

   91 const: "nil" •

    $default  reduce using rule 91 (const)


State 17

   53 lvalue: "::" • "identifier"

    "identifier"  shift, and go to state 59


State 18

   38 term: "++" • lvalue

    "identifier"  shift, and go to state 4
    "local"       shift, and go to state 13
    "::"          shift, and go to state 17
    '('           shift, and go to state 60

    lvalue  go to state 61
    member  go to state 33
    call    go to state 62


State 19

   39 term: "--" • lvalue

    "identifier"  shift, and go to state 4
    "local"       shift, and go to state 13
    "::"          shift, and go to state 17
    '('           shift, and go to state 60

    lvalue  go to state 63
    member  go to state 33
    call    go to state 62


State 20

   42 term: '-' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 21

   71 objectdef: '[' • ']'
   72          | '[' • elist ']'
   73          | '[' • indexed ']'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    ']'           shift, and go to state 65
    '('           shift, and go to state 22
    '{'           shift, and go to state 66

    expr         go to state 67
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 68
    objectdef    go to state 35
    indexed      go to state 69
    indexedelem  go to state 70
    const        go to state 39


State 22

   36 term: '(' • expr ')'
   49 primary: '(' • funcdef ')'
   61 call: '(' • funcdef ')' '(' ')'
   62     | '(' • funcdef ')' '(' elist ')'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "function"    shift, and go to state 8
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 71
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcprefix  go to state 37
    funcdef     go to state 72
    const       go to state 39


State 23

   14 stmt: ';' •

    $default  reduce using rule 14 (stmt)


State 24

   77 block: '{' • '}'
   79      | '{' • $@5 stmts '}'

    '}'  shift, and go to state 73

    $default  reduce using rule 78 ($@5)

    $@5  go to state 74


State 25

    0 $accept: program • $end

    $end  shift, and go to state 75


State 26

    2 program: stmts •
    4 stmts: stmts • stmt

    error         shift, and go to state 1
    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "if"          shift, and go to state 5
    "while"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "return"      shift, and go to state 9
    "break"       shift, and go to state 10
    "continue"    shift, and go to state 11
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 23
    '{'           shift, and go to state 24

    $end  reduce using rule 2 (program)

    stmt        go to state 76
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46
    break       go to state 47
    continue    go to state 48


State 27

    3 stmts: stmt •

    $default  reduce using rule 3 (stmts)


State 28

    5 stmt: expr • ';'
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ';'    shift, and go to state 90


State 29

   34 expr: term •

    $default  reduce using rule 34 (expr)


State 30

   16 expr: assignexpr •

    $default  reduce using rule 16 (expr)


State 31

   37 term: primary •

    $default  reduce using rule 37 (term)


State 32

   40 term: lvalue • "++"
   41     | lvalue • "--"
   44 assignexpr: lvalue • '=' expr
   48 primary: lvalue •
   54 member: lvalue • '.' "identifier"
   56       | lvalue • '[' expr ']'
   60 call: lvalue • callsuffix

    ".."  shift, and go to state 91
    "++"  shift, and go to state 92
    "--"  shift, and go to state 93
    '='   shift, and go to state 94
    '.'   shift, and go to state 95
    '['   shift, and go to state 96
    '('   shift, and go to state 97

    $default  reduce using rule 48 (primary)

    callsuffix  go to state 98
    normcall    go to state 99
    methodcall  go to state 100


State 33

   50 lvalue: member •

    $default  reduce using rule 50 (lvalue)


State 34

   45 primary: call •
   55 member: call • '.' "identifier"
   57       | call • '[' expr ']'
   58 call: call • '(' ')'
   59     | call • '(' elist ')'

    '.'  shift, and go to state 101
    '['  shift, and go to state 102
    '('  shift, and go to state 103

    $default  reduce using rule 45 (primary)


State 35

   46 primary: objectdef •

    $default  reduce using rule 46 (primary)


State 36

   12 stmt: block •

    $default  reduce using rule 12 (stmt)


State 37

   88 funcdef: funcprefix • funcargs $@6 funcbody $@7

    '('  shift, and go to state 104

    funcargs  go to state 105


State 38

   13 stmt: funcdef •

    $default  reduce using rule 13 (stmt)


State 39

   47 primary: const •

    $default  reduce using rule 47 (primary)


State 40

   98 ifstmt: ifprefix • stmt
   99       | ifprefix • stmt elseprefix stmt

    error         shift, and go to state 1
    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "if"          shift, and go to state 5
    "while"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "return"      shift, and go to state 9
    "break"       shift, and go to state 10
    "continue"    shift, and go to state 11
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 23
    '{'           shift, and go to state 24

    stmt        go to state 106
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46
    break       go to state 47
    continue    go to state 48


State 41

    6 stmt: ifstmt •

    $default  reduce using rule 6 (stmt)


State 42

  102 whilestmt: whilestart • whilecond loopstmt

    '('  shift, and go to state 107

    whilecond  go to state 108


State 43

    7 stmt: whilestmt •

    $default  reduce using rule 7 (stmt)


State 44

  108 forstmt: forprefix • N E ')' N loopstmt N

    $default  reduce using rule 103 (N)

    N  go to state 109


State 45

    8 stmt: forstmt •

    $default  reduce using rule 8 (stmt)


State 46

    9 stmt: returnstmt •

    $default  reduce using rule 9 (stmt)


State 47

   10 stmt: break •

    $default  reduce using rule 10 (stmt)


State 48

   11 stmt: continue •

    $default  reduce using rule 11 (stmt)


State 49

   96 ifprefix: "if" '(' • expr ')'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 110
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 50

  107 forprefix: "for" '(' • E ';' M expr ';'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    $default  reduce using rule 105 (E)

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 111
    objectdef   go to state 35
    const       go to state 39
    E           go to state 112


State 51

   80 funcname: "identifier" •

    $default  reduce using rule 80 (funcname)


State 52

   82 funcprefix: "function" funcname •

    $default  reduce using rule 82 (funcprefix)


State 53

  109 returnstmt: "return" ';' •

    $default  reduce using rule 109 (returnstmt)


State 54

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
  110 returnstmt: "return" expr • ';'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ';'    shift, and go to state 113


State 55

  113 break: "break" ';' •

    $default  reduce using rule 113 (break)


State 56

  114 continue: "continue" ';' •

    $default  reduce using rule 114 (continue)


State 57

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   43 term: "not" expr •

    $default  reduce using rule 43 (term)


State 58

   52 lvalue: "local" "identifier" •

    $default  reduce using rule 52 (lvalue)


State 59

   53 lvalue: "::" "identifier" •

    $default  reduce using rule 53 (lvalue)


State 60

   61 call: '(' • funcdef ')' '(' ')'
   62     | '(' • funcdef ')' '(' elist ')'

    "function"  shift, and go to state 8

    funcprefix  go to state 37
    funcdef     go to state 114


State 61

   38 term: "++" lvalue •
   54 member: lvalue • '.' "identifier"
   56       | lvalue • '[' expr ']'
   60 call: lvalue • callsuffix

    ".."  shift, and go to state 91
    '.'   shift, and go to state 95
    '['   shift, and go to state 96
    '('   shift, and go to state 97

    $default  reduce using rule 38 (term)

    callsuffix  go to state 98
    normcall    go to state 99
    methodcall  go to state 100


State 62

   55 member: call • '.' "identifier"
   57       | call • '[' expr ']'
   58 call: call • '(' ')'
   59     | call • '(' elist ')'

    '.'  shift, and go to state 101
    '['  shift, and go to state 102
    '('  shift, and go to state 103


State 63

   39 term: "--" lvalue •
   54 member: lvalue • '.' "identifier"
   56       | lvalue • '[' expr ']'
   60 call: lvalue • callsuffix

    ".."  shift, and go to state 91
    '.'   shift, and go to state 95
    '['   shift, and go to state 96
    '('   shift, and go to state 97

    $default  reduce using rule 39 (term)

    callsuffix  go to state 98
    normcall    go to state 99
    methodcall  go to state 100


State 64

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   42 term: '-' expr •

    $default  reduce using rule 42 (term)


State 65

   71 objectdef: '[' ']' •

    $default  reduce using rule 71 (objectdef)


State 66

   76 indexedelem: '{' • expr ':' expr '}'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 67

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   69 elist: expr •

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89

    $default  reduce using rule 69 (elist)


State 68

   70 elist: elist • ',' expr
   72 objectdef: '[' elist • ']'

    ']'  shift, and go to state 116
    ','  shift, and go to state 117


State 69

   73 objectdef: '[' indexed • ']'
   75 indexed: indexed • ',' indexedelem

    ']'  shift, and go to state 118
    ','  shift, and go to state 119


State 70

   74 indexed: indexedelem •

    $default  reduce using rule 74 (indexed)


State 71

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   36 term: '(' expr • ')'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ')'    shift, and go to state 120


State 72

   49 primary: '(' funcdef • ')'
   61 call: '(' funcdef • ')' '(' ')'
   62     | '(' funcdef • ')' '(' elist ')'

    ')'  shift, and go to state 121


State 73

   77 block: '{' '}' •

    $default  reduce using rule 77 (block)


State 74

   79 block: '{' $@5 • stmts '}'

    error         shift, and go to state 1
    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "if"          shift, and go to state 5
    "while"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "return"      shift, and go to state 9
    "break"       shift, and go to state 10
    "continue"    shift, and go to state 11
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 23
    '{'           shift, and go to state 24

    stmts       go to state 122
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46
    break       go to state 47
    continue    go to state 48


State 75

    0 $accept: program $end •

    $default  accept


State 76

    4 stmts: stmts stmt •

    $default  reduce using rule 4 (stmts)


State 77

   31 expr: expr "and" • $@3 W expr

    $default  reduce using rule 30 ($@3)

    $@3  go to state 123


State 78

   33 expr: expr "or" • $@4 W expr

    $default  reduce using rule 32 ($@4)

    $@4  go to state 124


State 79

   27 expr: expr "==" • $@1 expr

    $default  reduce using rule 26 ($@1)

    $@1  go to state 125


State 80

   29 expr: expr "!=" • $@2 expr

    $default  reduce using rule 28 ($@2)

    $@2  go to state 126


State 81

   23 expr: expr ">=" • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 82

   25 expr: expr "<=" • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 83

   22 expr: expr '>' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 84

   24 expr: expr '<' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 85

   17 expr: expr '+' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 86

   18 expr: expr '-' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 87

   19 expr: expr '*' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 88

   21 expr: expr '/' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 134
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 89

   20 expr: expr '%' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 90

    5 stmt: expr ';' •

    $default  reduce using rule 5 (stmt)


State 91

   67 methodcall: ".." • "identifier" '(' ')'
   68           | ".." • "identifier" '(' elist ')'

    "identifier"  shift, and go to state 136


State 92

   40 term: lvalue "++" •

    $default  reduce using rule 40 (term)


State 93

   41 term: lvalue "--" •

    $default  reduce using rule 41 (term)


State 94

   44 assignexpr: lvalue '=' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 137
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 95

   54 member: lvalue '.' • "identifier"

    "identifier"  shift, and go to state 138


State 96

   56 member: lvalue '[' • expr ']'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 139
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 97

   65 normcall: '(' • ')'
   66         | '(' • elist ')'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ')'           shift, and go to state 140

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 141
    objectdef   go to state 35
    const       go to state 39


State 98

   60 call: lvalue callsuffix •

    $default  reduce using rule 60 (call)


State 99

   63 callsuffix: normcall •

    $default  reduce using rule 63 (callsuffix)


State 100

   64 callsuffix: methodcall •

    $default  reduce using rule 64 (callsuffix)


State 101

   55 member: call '.' • "identifier"

    "identifier"  shift, and go to state 142


State 102

   57 member: call '[' • expr ']'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 143
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 103

   58 call: call '(' • ')'
   59     | call '(' • elist ')'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ')'           shift, and go to state 144

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 145
    objectdef   go to state 35
    const       go to state 39


State 104

   83 funcargs: '(' • ')'
   84         | '(' • idlist ')'

    "identifier"  shift, and go to state 146
    ')'           shift, and go to state 147

    idlist  go to state 148


State 105

   88 funcdef: funcprefix funcargs • $@6 funcbody $@7

    $default  reduce using rule 86 ($@6)

    $@6  go to state 149


State 106

   98 ifstmt: ifprefix stmt •
   99       | ifprefix stmt • elseprefix stmt

    "else"  shift, and go to state 150

    $default  reduce using rule 98 (ifstmt)

    elseprefix  go to state 151


State 107

  101 whilecond: '(' • expr ')'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 152
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 108

  102 whilestmt: whilestart whilecond • loopstmt

    $default  reduce using rule 111 ($@8)

    loopstmt  go to state 153
    $@8       go to state 154


State 109

  108 forstmt: forprefix N • E ')' N loopstmt N

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    $default  reduce using rule 105 (E)

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 111
    objectdef   go to state 35
    const       go to state 39
    E           go to state 155


State 110

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   96 ifprefix: "if" '(' expr • ')'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ')'    shift, and go to state 156


State 111

   70 elist: elist • ',' expr
  106 E: elist •

    ','  shift, and go to state 117

    $default  reduce using rule 106 (E)


State 112

  107 forprefix: "for" '(' E • ';' M expr ';'

    ';'  shift, and go to state 157


State 113

  110 returnstmt: "return" expr ';' •

    $default  reduce using rule 110 (returnstmt)


State 114

   61 call: '(' funcdef • ')' '(' ')'
   62     | '(' funcdef • ')' '(' elist ')'

    ')'  shift, and go to state 158


State 115

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   76 indexedelem: '{' expr • ':' expr '}'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ':'    shift, and go to state 159


State 116

   72 objectdef: '[' elist ']' •

    $default  reduce using rule 72 (objectdef)


State 117

   70 elist: elist ',' • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 160
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 118

   73 objectdef: '[' indexed ']' •

    $default  reduce using rule 73 (objectdef)


State 119

   75 indexed: indexed ',' • indexedelem

    '{'  shift, and go to state 66

    indexedelem  go to state 161


State 120

   36 term: '(' expr ')' •

    $default  reduce using rule 36 (term)


State 121

   49 primary: '(' funcdef ')' •
   61 call: '(' funcdef ')' • '(' ')'
   62     | '(' funcdef ')' • '(' elist ')'

    '('  shift, and go to state 162

    $default  reduce using rule 49 (primary)


State 122

    4 stmts: stmts • stmt
   79 block: '{' $@5 stmts • '}'

    error         shift, and go to state 1
    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "if"          shift, and go to state 5
    "while"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "return"      shift, and go to state 9
    "break"       shift, and go to state 10
    "continue"    shift, and go to state 11
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 23
    '{'           shift, and go to state 24
    '}'           shift, and go to state 163

    stmt        go to state 76
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46
    break       go to state 47
    continue    go to state 48


State 123

   31 expr: expr "and" $@3 • W expr

    $default  reduce using rule 35 (W)

    W  go to state 164


State 124

   33 expr: expr "or" $@4 • W expr

    $default  reduce using rule 35 (W)

    W  go to state 165


State 125

   27 expr: expr "==" $@1 • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 166
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 126

   29 expr: expr "!=" $@2 • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 167
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 127

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   23     | expr ">=" expr •
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 128

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   25     | expr "<=" expr •
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 25 (expr)


State 129

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   22     | expr '>' expr •
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 130

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   24     | expr '<' expr •
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 24 (expr)


State 131

   17 expr: expr • '+' expr
   17     | expr '+' expr •
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 17 (expr)


State 132

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   18     | expr '-' expr •
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '%'  shift, and go to state 89

    $default  reduce using rule 18 (expr)


State 133

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   19     | expr '*' expr •
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    $default  reduce using rule 19 (expr)


State 134

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   21     | expr '/' expr •
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    $default  reduce using rule 21 (expr)


State 135

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   20     | expr '%' expr •
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    $default  reduce using rule 20 (expr)


State 136

   67 methodcall: ".." "identifier" • '(' ')'
   68           | ".." "identifier" • '(' elist ')'

    '('  shift, and go to state 168


State 137

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   44 assignexpr: lvalue '=' expr •

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89

    $default  reduce using rule 44 (assignexpr)


State 138

   54 member: lvalue '.' "identifier" •

    $default  reduce using rule 54 (member)


State 139

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   56 member: lvalue '[' expr • ']'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ']'    shift, and go to state 169


State 140

   65 normcall: '(' ')' •

    $default  reduce using rule 65 (normcall)


State 141

   66 normcall: '(' elist • ')'
   70 elist: elist • ',' expr

    ')'  shift, and go to state 170
    ','  shift, and go to state 117


State 142

   55 member: call '.' "identifier" •

    $default  reduce using rule 55 (member)


State 143

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   57 member: call '[' expr • ']'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ']'    shift, and go to state 171


State 144

   58 call: call '(' ')' •

    $default  reduce using rule 58 (call)


State 145

   59 call: call '(' elist • ')'
   70 elist: elist • ',' expr

    ')'  shift, and go to state 172
    ','  shift, and go to state 117


State 146

   94 idlist: "identifier" •

    $default  reduce using rule 94 (idlist)


State 147

   83 funcargs: '(' ')' •

    $default  reduce using rule 83 (funcargs)


State 148

   84 funcargs: '(' idlist • ')'
   95 idlist: idlist • ',' "identifier"

    ')'  shift, and go to state 173
    ','  shift, and go to state 174


State 149

   88 funcdef: funcprefix funcargs $@6 • funcbody $@7

    '{'  shift, and go to state 24

    block     go to state 175
    funcbody  go to state 176


State 150

   97 elseprefix: "else" •

    $default  reduce using rule 97 (elseprefix)


State 151

   99 ifstmt: ifprefix stmt elseprefix • stmt

    error         shift, and go to state 1
    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "if"          shift, and go to state 5
    "while"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "return"      shift, and go to state 9
    "break"       shift, and go to state 10
    "continue"    shift, and go to state 11
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 23
    '{'           shift, and go to state 24

    stmt        go to state 177
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46
    break       go to state 47
    continue    go to state 48


State 152

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
  101 whilecond: '(' expr • ')'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ')'    shift, and go to state 178


State 153

  102 whilestmt: whilestart whilecond loopstmt •

    $default  reduce using rule 102 (whilestmt)


State 154

  112 loopstmt: $@8 • stmt

    error         shift, and go to state 1
    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "if"          shift, and go to state 5
    "while"       shift, and go to state 6
    "for"         shift, and go to state 7
    "function"    shift, and go to state 8
    "return"      shift, and go to state 9
    "break"       shift, and go to state 10
    "continue"    shift, and go to state 11
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ';'           shift, and go to state 23
    '{'           shift, and go to state 24

    stmt        go to state 179
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    ifstmt      go to state 41
    whilestart  go to state 42
    whilestmt   go to state 43
    forprefix   go to state 44
    forstmt     go to state 45
    returnstmt  go to state 46
    break       go to state 47
    continue    go to state 48


State 155

  108 forstmt: forprefix N E • ')' N loopstmt N

    ')'  shift, and go to state 180


State 156

   96 ifprefix: "if" '(' expr ')' •

    $default  reduce using rule 96 (ifprefix)


State 157

  107 forprefix: "for" '(' E ';' • M expr ';'

    $default  reduce using rule 104 (M)

    M  go to state 181


State 158

   61 call: '(' funcdef ')' • '(' ')'
   62     | '(' funcdef ')' • '(' elist ')'

    '('  shift, and go to state 162


State 159

   76 indexedelem: '{' expr ':' • expr '}'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 182
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 160

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   70 elist: elist ',' expr •

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89

    $default  reduce using rule 70 (elist)


State 161

   75 indexed: indexed ',' indexedelem •

    $default  reduce using rule 75 (indexed)


State 162

   61 call: '(' funcdef ')' '(' • ')'
   62     | '(' funcdef ')' '(' • elist ')'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ')'           shift, and go to state 183

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 184
    objectdef   go to state 35
    const       go to state 39


State 163

   79 block: '{' $@5 stmts '}' •

    $default  reduce using rule 79 (block)


State 164

   31 expr: expr "and" $@3 W • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 185
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 165

   33 expr: expr "or" $@4 W • expr

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 186
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 166

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   27     | expr "==" $@1 expr •
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    ">="  shift, and go to state 81
    "<="  shift, and go to state 82
    '>'   shift, and go to state 83
    '<'   shift, and go to state 84
    '+'   shift, and go to state 85
    '-'   shift, and go to state 86
    '*'   shift, and go to state 87
    '/'   shift, and go to state 88
    '%'   shift, and go to state 89

    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 167

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   29     | expr "!=" $@2 expr •
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr

    ">="  shift, and go to state 81
    "<="  shift, and go to state 82
    '>'   shift, and go to state 83
    '<'   shift, and go to state 84
    '+'   shift, and go to state 85
    '-'   shift, and go to state 86
    '*'   shift, and go to state 87
    '/'   shift, and go to state 88
    '%'   shift, and go to state 89

    "=="  error (nonassociative)
    "!="  error (nonassociative)

    $default  reduce using rule 29 (expr)


State 168

   67 methodcall: ".." "identifier" '(' • ')'
   68           | ".." "identifier" '(' • elist ')'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22
    ')'           shift, and go to state 187

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 188
    objectdef   go to state 35
    const       go to state 39


State 169

   56 member: lvalue '[' expr ']' •

    $default  reduce using rule 56 (member)


State 170

   66 normcall: '(' elist ')' •

    $default  reduce using rule 66 (normcall)


State 171

   57 member: call '[' expr ']' •

    $default  reduce using rule 57 (member)


State 172

   59 call: call '(' elist ')' •

    $default  reduce using rule 59 (call)


State 173

   84 funcargs: '(' idlist ')' •

    $default  reduce using rule 84 (funcargs)


State 174

   95 idlist: idlist ',' • "identifier"

    "identifier"  shift, and go to state 189


State 175

   85 funcbody: block •

    $default  reduce using rule 85 (funcbody)


State 176

   88 funcdef: funcprefix funcargs $@6 funcbody • $@7

    $default  reduce using rule 87 ($@7)

    $@7  go to state 190


State 177

   99 ifstmt: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 99 (ifstmt)


State 178

  101 whilecond: '(' expr ')' •

    $default  reduce using rule 101 (whilecond)


State 179

  112 loopstmt: $@8 stmt •

    $default  reduce using rule 112 (loopstmt)


State 180

  108 forstmt: forprefix N E ')' • N loopstmt N

    $default  reduce using rule 103 (N)

    N  go to state 191


State 181

  107 forprefix: "for" '(' E ';' M • expr ';'

    "number"      shift, and go to state 2
    "string"      shift, and go to state 3
    "identifier"  shift, and go to state 4
    "not"         shift, and go to state 12
    "local"       shift, and go to state 13
    "true"        shift, and go to state 14
    "false"       shift, and go to state 15
    "nil"         shift, and go to state 16
    "::"          shift, and go to state 17
    "++"          shift, and go to state 18
    "--"          shift, and go to state 19
    '-'           shift, and go to state 20
    '['           shift, and go to state 21
    '('           shift, and go to state 22

    expr        go to state 192
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 182

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   76 indexedelem: '{' expr ':' expr • '}'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    '}'    shift, and go to state 193


State 183

   61 call: '(' funcdef ')' '(' ')' •

    $default  reduce using rule 61 (call)


State 184

   62 call: '(' funcdef ')' '(' elist • ')'
   70 elist: elist • ',' expr

    ')'  shift, and go to state 194
    ','  shift, and go to state 117


State 185

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   31     | expr "and" $@3 W expr •
   33     | expr • "or" $@4 W expr

    "=="  shift, and go to state 79
    "!="  shift, and go to state 80
    ">="  shift, and go to state 81
    "<="  shift, and go to state 82
    '>'   shift, and go to state 83
    '<'   shift, and go to state 84
    '+'   shift, and go to state 85
    '-'   shift, and go to state 86
    '*'   shift, and go to state 87
    '/'   shift, and go to state 88
    '%'   shift, and go to state 89

    $default  reduce using rule 31 (expr)


State 186

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
   33     | expr "or" $@4 W expr •

    "and"  shift, and go to state 77
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89

    $default  reduce using rule 33 (expr)


State 187

   67 methodcall: ".." "identifier" '(' ')' •

    $default  reduce using rule 67 (methodcall)


State 188

   68 methodcall: ".." "identifier" '(' elist • ')'
   70 elist: elist • ',' expr

    ')'  shift, and go to state 195
    ','  shift, and go to state 117


State 189

   95 idlist: idlist ',' "identifier" •

    $default  reduce using rule 95 (idlist)


State 190

   88 funcdef: funcprefix funcargs $@6 funcbody $@7 •

    $default  reduce using rule 88 (funcdef)


State 191

  108 forstmt: forprefix N E ')' N • loopstmt N

    $default  reduce using rule 111 ($@8)

    loopstmt  go to state 196
    $@8       go to state 154


State 192

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '%' expr
   21     | expr • '/' expr
   22     | expr • '>' expr
   23     | expr • ">=" expr
   24     | expr • '<' expr
   25     | expr • "<=" expr
   27     | expr • "==" $@1 expr
   29     | expr • "!=" $@2 expr
   31     | expr • "and" $@3 W expr
   33     | expr • "or" $@4 W expr
  107 forprefix: "for" '(' E ';' M expr • ';'

    "and"  shift, and go to state 77
    "or"   shift, and go to state 78
    "=="   shift, and go to state 79
    "!="   shift, and go to state 80
    ">="   shift, and go to state 81
    "<="   shift, and go to state 82
    '>'    shift, and go to state 83
    '<'    shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86
    '*'    shift, and go to state 87
    '/'    shift, and go to state 88
    '%'    shift, and go to state 89
    ';'    shift, and go to state 197


State 193

   76 indexedelem: '{' expr ':' expr '}' •

    $default  reduce using rule 76 (indexedelem)


State 194

   62 call: '(' funcdef ')' '(' elist ')' •

    $default  reduce using rule 62 (call)


State 195

   68 methodcall: ".." "identifier" '(' elist ')' •

    $default  reduce using rule 68 (methodcall)


State 196

  108 forstmt: forprefix N E ')' N loopstmt • N

    $default  reduce using rule 103 (N)

    N  go to state 198


State 197

  107 forprefix: "for" '(' E ';' M expr ';' •

    $default  reduce using rule 107 (forprefix)


State 198

  108 forstmt: forprefix N E ')' N loopstmt N •

    $default  reduce using rule 108 (forstmt)
